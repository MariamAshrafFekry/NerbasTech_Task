@model SongsApp.Models.SongViewModels
@{
    ViewBag.Title = "Home Page";
}
<button type="button" class="col-md-2 col-md-offset-3 btn btn-basic btn-lg addSongs" data-toggle="modal" data-target="#addSongModal">Add Song</button>
<button type="button" class="col-md-2 col-md-offset-2 btn btn-basic btn-lg downloadSongs" id="ibtn-songs-all" data-toggle="modal" data-target="#imodal-songs-result">Download Songs</button>
<br /><br /><br /><hr />
<center>
    <h2 class="head2">Your Songs</h2>
</center>
<hr />

@for (int i = 0; i < Model.songs.Count(); i++)
{
    <div class="data">
        <h3>@Model.songs.ElementAt(i).SongName</h3>
        <img src="@String.Format("data:image/gif;base64,{0}", Convert.ToBase64String(Model.songs.ElementAt(i).image))" class="md-col-2 iimg" />
        <span class="col-md-2">@Model.songs.ElementAt(i).AlbumName</span>
        <span class="col-md-2">@Model.songs.ElementAt(i).SingerName</span>
        <audio controls class="col-md-3 audio">
            <source src="@String.Format("data:audio/mp3;base64,{0}", Convert.ToBase64String(Model.songs.ElementAt(i).song))" type="audio/mp3" />
        </audio>
        <button type="button" class="btn btn-danger btn-lg deleteSong" data-toggle="modal" data-target="#deleteSongModal-@i">Delete</button>
    </div>
    <hr />
    <!--Start Delete Song Modal-->
    <div id="deleteSongModal-@i" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Song</h4>
                </div>
                <form action="/Song/DeleteSong?id=@Model.songs.ElementAt(i).ID" method="post">
                    <div class="modal-body">
                        <p>Are You Sure ?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
    <!--End Delete Song Modal-->

}

<!--Start Add Song Modal-->

<div id="addSongModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add new Song</h4>
            </div>
            <div class="modal-body">

                @using (Html.BeginForm("AddSong", "Song", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <center>
                        <div class="form-group">
                            @Html.LabelFor(m => m.songModel.SongName, new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.songModel.SongName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.songModel.SongName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.songModel.SingerName, new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.songModel.SingerName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.songModel.SingerName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.songModel.AlbumName, new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.songModel.AlbumName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.songModel.AlbumName, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(m => m.songModel.image, new { @class = "col-md-3 control-label" })
                            <label class="input-group-btn">
                                <span class="btn btn-default file-upload">
                                    @Html.TextBoxFor(m => m.songModel.image, new { @Type = "file", @Class = "file-upload" })
                                </span>
                            </label>
                            <input type="text" class="form-control readonly" readonly>
                            @Html.ValidationMessageFor(m => m.songModel.image, "", new { @Class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.songModel.NationalID, new { @class = "col-md-3 control-label" })
                            <label class="input-group-btn">
                                <span class="btn btn-default file-upload">
                                    @Html.TextBoxFor(m => m.songModel.NationalID, new { @Type = "file", @Class = "file-upload" })
                                </span>
                            </label>
                            <input type="text" class="form-control readonly" readonly>
                            @Html.ValidationMessageFor(m => m.songModel.NationalID, "", new { @Class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.songModel.song, new { @class = "col-md-3 control-label" })
                            <label class="input-group-btn">
                                <span class="btn btn-default file-upload">
                                    @Html.TextBoxFor(m => m.songModel.song, new { @Type = "file", @Class = "file-upload" })
                                </span>
                            </label>
                            <input type="text" class="form-control readonly" readonly>
                            @Html.ValidationMessageFor(m => m.songModel.song, "", new { @Class = "text-danger" })
                        </div>
                    </center>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-danger">Add</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!--End Add Song Modal-->

<div id="imodal-songs-result" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" id="ibtn-close-songs" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="imodal-songs-title">All Songs</h4>
            </div>
            <div class="modal-body cscrollbar-container cscrollbar-modal">
                <div id="idiv-result">
                    <div class="cdiv-custom-alert hidden">
                        <span class="fa fa-medkit fa-4x"></span><br />
                        <h4>No Songs Available </h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/allSongs.js"></script>
}
<style>
        .iimg {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: inline;
            float: left;
        }

        .data {
            text-align: center;
        }

        .head2, #imodal-songs-title, .cspan-song-name {
            font-family: cursive;
            color: #cd54a9;
        }

        .addSongs, .downloadSongs {
            margin-top: 10px;
            border-radius: 15px;
            font-family: cursive;
            display: inline;
        }

        .cdiv-song {
            text-align: center;
        }

        .ca-audio {
            color: white;
        }

        .audio {
            margin-top: 10px;
        }

        .cbtn-audio-download {
            display: inline;
            margin-top: 15px;
        }

        .form-control:read-only {
            background-color: #ffffff;
        }

        .form-control {
            margin-bottom: 1em;
            margin-bottom: 10px;
        }

        .readonly {
            border: 0px;
            height: 0px;
            padding: 0px;
            width: 10px;
        }

        .cspan-song-name {
            font-size: 24px;
        }
</style>